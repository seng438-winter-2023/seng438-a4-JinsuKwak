// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
public class CostcoRegisterTest {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() {
    driver = new FirefoxDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void navigateToSignUp() {
    driver.get("https://www.costco.ca//");
    driver.manage().window().setSize(new Dimension(1236, 691));
    driver.findElement(By.id("header_sign_in")).click();
    driver.findElement(By.id("createAccount")).click();
    driver.findElement(By.id("continue")).click();
    assertThat(driver.findElement(By.id("createAccountHeader")).getText(), is("Create Account"));
  }
  
  @Test
  public void registerExistingAccount() {
    driver.get("https://www.costco.ca//");
    driver.manage().window().setSize(new Dimension(1236, 691));
    driver.findElement(By.id("header_sign_in")).click();
    driver.findElement(By.id("createAccount")).click();
    driver.findElement(By.id("email")).click();
    driver.findElement(By.id("email")).sendKeys("costcotest404@gmail.com");
    driver.findElement(By.id("newPassword")).click();
    driver.findElement(By.id("newPassword")).sendKeys("password123A!");
    driver.findElement(By.id("reenterPassword")).click();
    driver.findElement(By.id("reenterPassword")).sendKeys("password123A!");
    driver.findElement(By.id("continue")).click();
    assertThat(driver.findElement(By.id("claimVerificationServerError")).getText(), is(
        "The email address you entered is already registered to a Costco.ca account. Please enter a new email address or sign in to access your account"));
  }
  
  @Test
  public void registerWithInvalidEmail() {
    driver.get("https://www.costco.ca//");
    driver.manage().window().setSize(new Dimension(1236, 691));
    driver.findElement(By.id("header_sign_in")).click();
    driver.findElement(By.id("createAccount")).click();
    driver.findElement(By.id("email")).click();
    driver.findElement(By.id("email")).sendKeys("231425161");
    driver.findElement(By.id("body-content")).click();
    assertThat(driver.findElement(By.id("invalidErrorMessage")).getText(), is("Enter a valid email address."));
  }

  @Test
  public void registerWithInvalidPassword() {
    driver.get("https://www.costco.ca//");
    driver.manage().window().setSize(new Dimension(1236, 691));
    driver.findElement(By.id("header_sign_in")).click();
    driver.findElement(By.id("createAccount")).click();
    driver.findElement(By.id("email")).click();
    driver.findElement(By.id("email")).sendKeys("costco@gmail.com");
    driver.findElement(By.id("newPassword")).click();
    driver.findElement(By.id("newPassword")).sendKeys("af");
    driver.findElement(By.id("reenterPassword")).click();
    driver.findElement(By.id("reenterPassword")).sendKeys("af");
    driver.findElement(By.id("continue")).click();
    assertThat(driver.findElement(By.id("pwdCondition1")).getText(), is("Use between 8 and 16 characters"));
  }
  
  @Test
  public void registerWithNoInputs() {
    driver.get("https://www.costco.ca//");
    driver.manage().window().setSize(new Dimension(1236, 691));
    driver.findElement(By.id("header_sign_in")).click();
    driver.findElement(By.id("createAccount")).click();
    driver.findElement(By.id("continue")).click();
    assertThat(driver.findElement(By.id("requiredEmailError")).getText(), is("Email address is required."));
    assertThat(driver.findElement(By.id("noPasswordError")).getText(), is("Password is required."));
    assertThat(driver.findElement(By.id("noConfirmPasswordError")).getText(), is("Confirm Password is required."));
  }
}
